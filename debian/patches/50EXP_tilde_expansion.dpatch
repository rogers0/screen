#! /bin/sh /usr/share/dpatch/dpatch-run
## 50EXP_tilde_expansion.dpatch by  <hesso@pool.math.tu-berlin.de>
##
## DP: Add full tilde expansion to the builtin 'source' command.

@DPATCH@
--- screen-4.0.3.orig/fileio.c	2007-08-06 19:26:00.000000000 +0200
+++ screen-4.0.3/fileio.c	2007-08-06 19:25:42.000000000 +0200
@@ -24,6 +24,7 @@
 #include <sys/types.h>
 #include <fcntl.h>
 #include <sys/stat.h>
+#include <pwd.h>
 
 #ifndef SIGINT
 # include <signal.h>
@@ -296,9 +297,47 @@
       Msg(0, "%s: source: recursion limit reached", rc_name);
       return;
     }
-  rc_recursion++;
-  FinishRc(rcfilename);
-  rc_recursion--;
+  if (*rcfilename == '~')
+    {
+      char rcfilename_tilde_exp[MAXPATHLEN+1];
+      char *slash_position = strchr(rcfilename, '/');
+      if (slash_position == rcfilename+1)
+        {
+          char *home = getenv("HOME");
+          if (!home)
+            {
+              Msg(0, "%s: source: tilde expansion failed", rc_name);
+              return;
+            }
+          snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", home, rcfilename+2);
+        }
+      else if (slash_position)
+        {
+          struct passwd *p;
+          *slash_position = 0;
+          p = getpwnam(rcfilename+1);
+          if (!p)
+            {
+              Msg(0, "%s: source: tilde expansion failed for user %s", rc_name, rcfilename+1);
+              return;
+            }
+          snprintf(rcfilename_tilde_exp, MAXPATHLEN, "%s/%s", p->pw_dir, slash_position+1);
+        }
+      else
+        {
+          Msg(0, "%s: source: illegal tilde expression.", rc_name);
+          return;
+        }
+      rc_recursion++;
+      FinishRc(rcfilename_tilde_exp);
+      rc_recursion--;
+    }
+  else
+    {
+      rc_recursion++;
+      FinishRc(rcfilename);
+      rc_recursion--;
+    }
 }
 
 
